/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        windows {
            bindings = <&kp LEFT_WIN>;
            key-positions = <37 36>;
        };

        layer3 {
            bindings = <&mo 3>;
            key-positions = <40 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E      &kp R         &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P      &kp BSPC
&kp LS(CAPSLOCK)  &kp A  &kp S  &kp D      &kp F         &kp G        &kp H    &kp J  &kp K      &kp L    &kp COLON  &kp MINUS
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C      &kp V         &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp EXCLAMATION
                                &kp LCTRL  &kp LEFT_ALT  &kp SPACE    &kp RET  &mo 1  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &kp N6          &kp N7          &kp N8           &kp N9  &kp N0     &kp BSPC
&trans  &trans  &trans  &trans  &trans  &trans       &kp COLON       &kp UP_ARROW    &trans           &trans  &kp COLON  &kp MINUS
&trans  &trans  &trans  &trans  &trans  &trans       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans     &kp EQUAL
                        &trans  &trans  &kp SPACE    &kp RET         &trans          &trans
            >;
        };

        layer2 {
            display-name = "Lower";
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET       &kp AMPERSAND   &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSPC
&trans  &trans           &trans       &trans    &trans      &trans         &kp COLON       &kp UP_ARROW    &trans           &trans                &kp COLON              &kp MINUS
&trans  &trans           &trans       &trans    &trans      &trans         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans                &trans                 &kp EQUAL
                                      &trans    &trans      &kp SPACE      &kp RET         &trans          &trans
            >;
        };

        layer3 {
            display-name = "Raise";
            bindings = <
&kp F1     &kp F2            &kp F3             &kp F4         &kp F5        &kp F6          &kp PG_UP      &kp HOME  &trans  &trans  &trans   &kp PRINTSCREEN
&kp F7     &kp F8            &kp F9             &kp F10        &kp F11       &kp F12         &kp PAGE_DOWN  &kp END   &trans  &trans  &kp SQT  &kp INS
&kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &bt BT_SEL 3  &bt BT_SEL 4    &trans         &trans    &trans  &trans  &trans   &kp ESC
                                                &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2    &kp ENTER      &trans    &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
